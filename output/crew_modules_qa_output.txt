{"competencies":[{"competency":"Apply foundational UX research methodologies to inform design decisions","time_estimate_m":360,"rationale":"Developers need to understand and apply core research techniques and best practices to effectively collaborate across disciplines and integrate user feedback into development. This competency addresses the client's priority for baseline research skills and supports business outcomes related to developer self-reliance and efficiency in the design and development process.","modules":[{"title":"Introduction to UX Research Methods","overview":"Let’s explore the foundations of UX research. We’ll cover the why behind research, introduce key qualitative and quantitative methods, and talk about how research shapes stronger digital products. You’ll come away ready to frame research questions for your next project.","time_estimate_m":75,"type":"lecture","rationale":"Kicks off the competency by establishing why research matters, offering software engineers a practical understanding of core UX research categories and when to use each. Sets context for collaboration and informed design.","tools_and_technologies":[],"qa_feedback":["Overview is only 3 sentences; expand to 4–5 sentences with clear student-facing language.","Consider adding a brief example or scenario to illustrate each research method.","Include Miro or another visual tool to show how research findings can be organized and shared."],"learning_objectives":["Define the purposes of qualitative and quantitative UX research methods","Explain how user research informs digital product development","Frame clear and effective UX research questions"]},{"title":"Qualitative and Quantitative Research Lab","overview":"In this hands-on session, we’ll practice basic research methods: conducting short user interviews and running a simple user survey. We’ll discuss what each approach uncovers and how to organize your findings.","time_estimate_m":90,"type":"lab","rationale":"Applies core research techniques in a low-stakes environment, building comfort with user interviews and basic survey design—skills software engineers need for regular, collaborative UX work.","tools_and_technologies":[],"qa_feedback":["Overview is only 2 sentences; expand to 4–5 sentences and set clear expectations.","Introduce Miro or another visualization tool for organizing interview notes and survey data.","Add details on participant recruitment and consent to align with best practices."],"learning_objectives":["Conduct a basic user interview to gather qualitative insights","Design and distribute a simple survey to collect quantitative data","Organize and document research findings for team review"]},{"title":"Synthesizing User Insights","overview":"You’ll learn how to analyze and make sense of qualitative and quantitative user data. We’ll walk through grouping findings, spotting patterns, and distilling actionable themes for your project.","time_estimate_m":60,"type":"lecture","rationale":"Bridges data gathering and practical application, giving engineers a structured way to turn raw research into useful design insights, meeting the client’s need for better integration of user feedback.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences and include a clear description of activities.","Recommend using Miro to cluster data points into themes visually.","Add an example of a pattern-recognition exercise to ground the concept."],"learning_objectives":["Group qualitative and quantitative data into meaningful categories","Identify patterns and trends in user research findings","Extract and articulate actionable design insights"]},{"title":"Continuous User Feedback Lab","overview":"In this lab, we’ll practice integrating ongoing user feedback into an evolving product concept. You’ll learn how to set up and interpret feedback cycles to iteratively refine your work.","time_estimate_m":60,"type":"lab","rationale":"Reinforces the need for continual improvement and user-centric development, helping developers build habits around user research and feedback beyond one-off usability tests.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences and break out steps clearly.","Suggest using Miro to track feedback cycles and iteration history.","Clarify how often feedback should be collected and which metrics to track."],"learning_objectives":["Set up a user feedback cycle using predefined methods","Interpret feedback to identify areas for product improvement","Iterate on a concept based on real-user input"]},{"title":"Evaluative Research and Usability Testing","overview":"We’ll look at usability testing basics, focusing on how to plan, run, and learn from think-aloud usability tests. This will help you evaluate your designs for real users’ needs.","time_estimate_m":75,"type":"lecture","rationale":"Clarifies how evaluative research drives product decisions, giving developers hands-on strategies to check and improve their design choices as part of their workflow.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences with jargon defined.","Include guidance on creating test scripts and participant scenarios.","Recommend introducing Miro or another tool for logging test observations."],"learning_objectives":["Plan and structure a think-aloud usability test","Conduct a usability test session and observe participant behavior","Analyze test results to identify usability issues"]} ]},{"competency":"Translate user research findings into actionable design requirements","time_estimate_m":180,"rationale":"This competency ensures that software engineers can move from research insights to tangible design criteria, a key aspect for connecting user needs with product features. It fulfills business outcomes by enabling more self-sufficient developers and aligns with the client's focus on incorporating UX approaches in decision-making.","modules":[{"title":"Turning Insights Into Requirements","overview":"Learn the process of transforming your research findings into specific, actionable requirements. We’ll cover user stories, journey maps, and turning pain points into must-have features.","time_estimate_m":60,"type":"lecture","rationale":"Provides developers with frameworks for bridging research and design, directly supporting the client’s need for actionable, user-centered requirements.","tools_and_technologies":[],"qa_feedback":["Overview is only 2 sentences; expand to 4–5 sentences and clarify examples.","Consider referencing Miro templates for journey mapping.","Define key terms like user story and acceptance criteria in student-facing language."],"learning_objectives":["Translate qualitative insights into user stories","Map user journeys to identify critical features","Prioritize design requirements based on user pain points"]},{"title":"Defining Requirements With Stakeholders Lab","overview":"You’ll practice collaborating with stakeholders to translate research results into prioritized product requirements. This lab simulates real-world sessions for aligning on user needs and business goals.","time_estimate_m":60,"type":"lab","rationale":"Simulates collaborative decision-making, preparing engineers for cross-functional work that ties research to development priorities.","tools_and_technologies":[],"qa_feedback":["Overview is only 2 sentences; expand to 4–5 with clear workflow steps.","Introduce Miro for live collaboration and requirement documentation.","Specify roles participants will play to mirror real stakeholder dynamics."],"learning_objectives":["Facilitate a stakeholder workshop to define priorities","Document requirements in a collaborative setting","Align on feature scope considering both user and business needs"]},{"title":"Documenting Requirements in Miro","overview":"Explore how to document and visualize feature requirements using Miro. You’ll make use of Miro’s tools to organize, tag, and share design requirements with your team.","time_estimate_m":60,"type":"lab","rationale":"Fulfills client priorities around Miro proficiency, ensuring engineers can communicate and collaborate visually and asynchronously.","tools_and_technologies":["Miro"],"qa_feedback":["Overview is only 1 sentence; expand to 4–5 sentences describing specific Miro features.","Add callouts on best practices for board layout and tagging.","Include a sample Miro template for requirement documentation."],"learning_objectives":["Set up a Miro board for requirements tracking","Use Miro’s tagging and grouping features to organize requirements","Share and review documented requirements with team members"]} ]},{"competency":"Design high-fidelity interfaces with attention to visual hierarchy and usability","time_estimate_m":330,"rationale":"Engineers must be able to create sophisticated, polished designs that communicate ideas clearly to peers and UX professionals. High-fidelity prototyping directly leads to business goals around demonstrating design capability and enabling better collaboration using shared artifacts.","modules":[{"title":"Principles of Visual Hierarchy","overview":"We’ll dig into visual hierarchy—how type, color, spacing, and layout work together to guide users through your interface. Get practical tips for building clarity into your designs.","time_estimate_m":60,"type":"lecture","rationale":"Equips engineers with foundational visual design knowledge that underpins high-fidelity interface creation and ensures shared design language with UX partners.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences with concrete examples.","Define terms like baseline grid, contrast, and focal point.","Suggest including a live deconstruction of a popular interface."],"learning_objectives":["Identify core principles of visual hierarchy","Apply color, typography, and spacing to create focus","Assess an interface for hierarchical clarity"]},{"title":"Building High-Fidelity Prototypes Lab","overview":"Using UI tools, you’ll build a pixel-perfect, clickable interface based on provided requirements and UI kits. Emphasis is on accuracy, alignment, and real-world patterns.","time_estimate_m":90,"type":"lab","rationale":"Gives software engineers structured, hands-on practice in high-fidelity design work—the centerpiece for demonstrating design competence to the business.","tools_and_technologies":["Visual Studio Code"],"qa_feedback":["Overview is 2 sentences; expand to 4–5 with step-by-step outline.","Clarify which UI kits or libraries will be provided.","Recommend showing how to inspect CSS properties for alignment checks."],"learning_objectives":["Construct a pixel-perfect interface using a UI kit","Implement interactive elements with accurate alignment","Validate design accuracy against provided specifications"]},{"title":"Usability Heuristics for High-Fidelity UIs","overview":"You’ll learn and apply key usability heuristics to assess and refine your designs. We’ll look at expert evaluation strategies that help you spot and fix common issues.","time_estimate_m":60,"type":"lecture","rationale":"Strengthens engineers’ ability to self-critique and improve high-fidelity prototypes, bridging design and usability for business-ready solutions.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 with examples of heuristics.","List out the heuristics to be covered.","Include a live heuristic evaluation demonstration."],"learning_objectives":["Summarize key usability heuristics","Apply heuristics to identify design problems","Recommend improvements based on heuristic findings"]},{"title":"High-Fidelity Interface Collaboration Lab","overview":"Practice giving and receiving design feedback in a shared environment, using provided prototypes as your starting point. Focus on clarity, actionable notes, and respectful collaboration.","time_estimate_m":60,"type":"lab","rationale":"Supports business priorities around collaboration, preparing engineers to communicate clearly with designers and iterate on designs.","tools_and_technologies":["Miro"],"qa_feedback":["Overview is 2 sentences; expand to 4–5 with clear activity steps.","Ensure focus remains on tool usage and artifact review, not on open-ended soft skills.","Provide a Miro feedback template to structure critique."],"learning_objectives":["Use Miro to share high-fidelity prototypes","Provide specific, actionable feedback on UI designs","Incorporate peer feedback into design iterations"]},{"title":"Polishing and Presenting UI Designs","overview":"Finalize your high-fidelity prototypes, then prepare a short presentation walking through your design decisions, challenges, and outcomes.","time_estimate_m":60,"type":"lab","rationale":"Builds self-reliance and demonstration skills, connecting design outcomes to business needs and communicating effectively to stakeholders.","tools_and_technologies":["Visual Studio Code","Miro"],"qa_feedback":["Overview is 1 sentence; expand to 4–5 sentences with preparation guidelines.","Recommend creating a slide or Miro deck outline for presentations.","Define criteria for a successful design walkthrough."],"learning_objectives":["Refine a high-fidelity prototype for presentation","Structure a concise design rationale narrative","Deliver a design walkthrough highlighting key decisions"]} ]},{"competency":"Structure information architecture to optimize navigation and user flows","time_estimate_m":180,"rationale":"A strong sense of information architecture is crucial for engineers to design intuitive user experiences and logical navigation, supporting cross-discipline collaboration and ensuring seamless developer-designer handoffs.","modules":[{"title":"Foundations of Information Architecture","overview":"We’ll introduce the basics of information architecture: organizing content, structuring navigation, and thinking in flows. You’ll learn about best practices and anti-patterns to avoid.","time_estimate_m":60,"type":"lecture","rationale":"Provides the theoretical foundation for structuring digital products, empowering engineers to make accessible, clear navigation choices.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences with examples.","Define core IA terms like taxonomy, hierarchy, and labeling.","Include a quick group activity or case study to illustrate concepts."],"learning_objectives":["Define key information architecture concepts","Compare effective and ineffective IA patterns","Outline a navigation structure for a sample product"]},{"title":"Card Sorting and Navigation Mapping Lab","overview":"Practice hands-on with card sorting and mapping navigation flows. You’ll use Miro to build, test, and refine your product’s information architecture.","time_estimate_m":60,"type":"lab","rationale":"Equips software engineers with practical methods for structuring and validating navigation using team-driven activities.","tools_and_technologies":["Miro"],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences detailing lab steps.","Specify participant roles for card sorting.","Add guidance on interpreting card sort results."],"learning_objectives":["Conduct a card sorting exercise in Miro","Create navigation maps from card sort output","Iterate on navigation based on testing insights"]},{"title":"Testing User Flows","overview":"Discover how to evaluate user flows through usability testing and metrics. We’ll cover techniques for spotting bottlenecks and improving task completion.","time_estimate_m":60,"type":"lecture","rationale":"Links architecture with user needs and product requirements, ensuring developers can assess and iterate on navigation choices.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences and define metrics.","Include an example flow and test scenario.","Suggest using a simple prototype or Miro board for testing."],"learning_objectives":["Identify key metrics for user flow success","Design a test scenario to validate navigation","Analyze test results to spot and fix flow bottlenecks"]} ]},{"competency":"Wireframe digital products to visually communicate interaction concepts","time_estimate_m":180,"rationale":"By regularly wireframing, engineers can quickly iterate on ideas, communicate solutions, and collaborate more effectively. This addresses client priorities regarding tooling like Miro and equips developers with hands-on skills to visualize and share concepts in team settings.","modules":[{"title":"Wireframing Basics","overview":"Explore what wireframes are and why they matter. We’ll walk through low-fidelity sketching, discuss standard patterns, and build confidence in visualizing interaction ideas.","time_estimate_m":60,"type":"lecture","rationale":"Builds a foundation for rapid concept exploration, vital for collaborative UX workflows.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences with context.","Define low-fidelity vs high-fidelity wireframes.","Include a quick sketch exercise example."],"learning_objectives":["Explain the purpose and benefits of wireframes","Distinguish between low- and high-fidelity wireframes","Sketch basic wireframe layouts"]},{"title":"Creating Wireframes With Miro Lab","overview":"You’ll use Miro’s digital whiteboard features to build quick wireframes for assigned user flows. Practice arranging elements, using shape tools, and working collaboratively.","time_estimate_m":75,"type":"lab","rationale":"Aligns directly with client priorities around Miro proficiency and digital whiteboarding for cross-team work.","tools_and_technologies":["Miro"],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences and outline steps.","Add tips for using Miro shortcuts and templates.","Suggest real-time feedback loops within the lab."],"learning_objectives":["Set up a Miro board for wireframing","Use shapes and connectors to illustrate user flows","Collaborate on wireframes and gather peer input"]},{"title":"Communicating Concepts Through Wireframes","overview":"We’ll focus on presenting and critiquing wireframes. Learn to explain your ideas clearly and respond to feedback in live design discussions.","time_estimate_m":45,"type":"lecture","rationale":"Strengthens communication skills that make wireframes actionable, fitting the outcome of improved team collaboration.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences with speaking tips.","Frame critique goals to keep feedback actionable.","Include an example script for presenting a wireframe."],"learning_objectives":["Articulate design intent behind a wireframe","Facilitate constructive wireframe critiques","Incorporate feedback into updated wireframes"]} ]},{"competency":"Utilize design systems to ensure consistency and scalability in UI components","time_estimate_m":180,"rationale":"Knowledge of design systems such as Primer is essential for developers to build cohesive and maintainable products. This competency supports business goals of efficiency and consistency and aligns with the client's interest in design system exposure and practice.","modules":[{"title":"Introduction to Design Systems","overview":"Learn what design systems are, their components, and why consistency and scalability are critical for UI development. We’ll use Primer as our anchor example.","time_estimate_m":60,"type":"lecture","rationale":"Prepares engineers with a shared language for design systems, reinforcing business priorities around standardization and efficiency.","tools_and_technologies":["Primer Design System"],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences with real-world examples.","Define atomic design terminology.","Include a quick demo of the Primer documentation site."],"learning_objectives":["Describe core components of a design system","Explain how design systems improve scalability","Navigate and interpret Primer Design System documentation"]},{"title":"Building With Primer Design System Lab","overview":"Hands-on with Primer: explore key UI components, use documentation, and create interface sections using the design system in a controlled environment.","time_estimate_m":60,"type":"lab","rationale":"Direct practice addressing the client priority for tool exposure and making engineers comfortable with design system adoption.","tools_and_technologies":["Primer Design System","Visual Studio Code"],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences with task breakdown.","Specify which Primer components to use in the exercise.","Add guidance for troubleshooting common integration issues."],"learning_objectives":["Implement UI components using Primer","Use Primer documentation to customize styles","Build a simple interface section in Visual Studio Code"]},{"title":"Maintaining and Extending Design Systems","overview":"Explore strategies for updating, scaling, and customizing design systems as products evolve, with real-world examples from Primer.","time_estimate_m":60,"type":"lecture","rationale":"Delivers practical insights into sustainable design system adoption, supporting velocity and cohesive product design.","tools_and_technologies":["Primer Design System"],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences covering version control.","Introduce branching and pull-request workflows for system updates.","Include an example of extending a Primer component."],"learning_objectives":["Explain best practices for versioning a design system","Demonstrate how to extend a Primer component","Plan a scalable workflow for system maintenance"]} ]},{"competency":"Evaluate product designs against business requirements and technical constraints","time_estimate_m":210,"rationale":"Developers must assess design choices in the context of business goals, technical boundaries, and stakeholder needs to ensure solutions are realistic and aligned with organizational strategy. This supports the business outcome of cross-functional decision-making.","modules":[{"title":"Evaluating Designs for Business Alignment","overview":"We’ll examine techniques for ensuring UI and UX decisions are rooted in business priorities. Learn to interpret business requirements and connect them to design criteria.","time_estimate_m":60,"type":"lecture","rationale":"Prepares engineers to evaluate the why behind design decisions, promoting business-informed development and cross-team understanding.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences with a concrete business case.","Define terms like ROI, KPIs, and stakeholder maps.","Include a short exercise mapping requirements to design features."],"learning_objectives":["Identify key business requirements relevant to UI/UX","Map design decisions to business KPIs","Assess whether a design meets target business outcomes"]},{"title":"Technical Constraints in Design Lab","overview":"Practice reviewing proposed designs and identifying technical limitations or trade-offs. You’ll simulate team decision-making to find practical solutions.","time_estimate_m":75,"type":"lab","rationale":"Marries technical and design skills by requiring developers to think about feasibility as part of healthy product delivery.","tools_and_technologies":["Visual Studio Code"],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences with clear steps.","Specify sample codebase or components for testing constraints.","Add guidance on documenting trade-offs for stakeholder review."],"learning_objectives":["Analyze a design for technical feasibility","Identify and document implementation trade-offs","Propose technical solutions that balance design intent and constraints"]},{"title":"Stakeholder Review and Feedback","overview":"Learn the essentials of stakeholder reviews—how to present design decisions, gather input, and evolve project scope collaboratively.","time_estimate_m":75,"type":"lecture","rationale":"Prepares engineers to communicate persuasively, synthesize perspectives, and make balanced decisions, boosting product alignment and velocity.","tools_and_technologies":[],"qa_feedback":["Module leads with soft skills; reframe to focus on the process and tools for structured stakeholder reviews.","Expand overview to 4–5 sentences describing the review workflow.","Introduce Miro or other artifact-sharing platforms for stakeholder input."],"learning_objectives":["Outline a structured stakeholder review process","Use visual artifacts to communicate design status","Capture and prioritize stakeholder feedback"]} ]},{"competency":"Implement interactive prototypes to test and validate user interactions","time_estimate_m":180,"rationale":"By building and testing prototypes, engineers gain practical skills for rapid validation of user flows and interaction patterns. This supports business outcomes focused on speeding up the design-development process and making developers more self-reliant.","modules":[{"title":"Basics of Interactive Prototyping","overview":"Define interactive prototyping and discover why and when to prototype. We’ll demo simple interactive flows that model real product behavior.","time_estimate_m":45,"type":"lecture","rationale":"Sets foundational knowledge for why prototyping is essential, particularly for validation early and often in the design process.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences with examples.","Clarify differences between paper, coded, and tool-based prototypes.","Introduce common prototyping metrics like task time and success rate."],"learning_objectives":["Define key interactive prototyping concepts","Compare prototyping fidelity levels","Identify scenarios where prototyping adds value"]},{"title":"Prototyping With Visual Studio Code Lab","overview":"Hands-on lab where you’ll build interactive UI flows using modern front-end code in Visual Studio Code. Emphasis on connecting states, transitions, and realistic interactions.","time_estimate_m":90,"type":"lab","rationale":"Aligns to learner strengths, speeding up skill-building for engineers already comfortable in code and driving hands-on validation practices.","tools_and_technologies":["Visual Studio Code"],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences with step guidance.","Specify which front-end framework or library to use.","Add instructions for simulating user interactions locally."],"learning_objectives":["Set up a code-based prototype environment","Implement interactive UI transitions","Test prototype behavior in the browser"]},{"title":"Validating User Flows","overview":"We’ll discuss validation techniques: in-person testing, remote feedback, and keeping validation cycles lean. Learn how to interpret what works and what doesn’t.","time_estimate_m":45,"type":"lecture","rationale":"Closes the loop on the competency, ensuring that prototyping is not just done—but is tested, iterated, and learned from.","tools_and_technologies":[],"qa_feedback":["Overview is 2 sentences; expand to 4–5 sentences and define success criteria.","Include an example validation plan.","Recommend using Miro or another tool to log and track validation feedback."],"learning_objectives":["Compare in-person and remote validation methods","Define lean validation cycles","Interpret validation results to guide iterations"]} ]}]}