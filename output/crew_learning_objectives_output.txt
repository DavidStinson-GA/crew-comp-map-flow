{"competencies":[{"competency":"Apply foundational UX research methodologies to inform design decisions","time_estimate_m":360,"rationale":"Developers need to understand and apply core research techniques and best practices to effectively collaborate across disciplines and integrate user feedback into development. This competency addresses the client's priority for baseline research skills and supports business outcomes related to developer self-reliance and efficiency in the design and development process.","modules":[{"title":"Introduction to UX Research Methods","overview":"This module introduces the foundations of UX research, including the motivations for research and the differentiation between qualitative and quantitative approaches. Participants learn how research connects with the digital product lifecycle, explore real-world examples, and begin to formulate their own UX research questions relevant to their projects. The emphasis is on context, collaboration, and practical understanding.","time_estimate_m":75,"type":"lecture","rationale":"Kicks off the competency by establishing why research matters, offering software engineers a practical understanding of core UX research categories and when to use each. Sets context for collaboration and informed design.","tools_and_technologies":[],"learning_objectives":["Define the purposes of qualitative and quantitative UX research methods","Explain how user research informs digital product development","Frame clear and effective UX research questions"]},{"title":"Qualitative and Quantitative Research Lab","overview":"This hands-on lab provides experience with basic UX research techniques. Learners conduct brief user interviews, design and distribute a simple user survey, and discuss the strengths and weaknesses of each method. The session concludes with sharing and organizing findings for team review.","time_estimate_m":90,"type":"lab","rationale":"Applies core research techniques in a low-stakes environment, building comfort with user interviews and basic survey design—skills software engineers need for regular, collaborative UX work.","tools_and_technologies":[],"learning_objectives":["Conduct a basic user interview to gather qualitative insights","Design and distribute a simple survey to collect quantitative data","Organize and document research findings for team review"]},{"title":"Synthesizing User Insights","overview":"This module builds analytical skills for making sense of collected user data. Learners practice grouping raw data into categories, identifying meaningful patterns, and transforming findings into actionable insights to influence product decisions. The process is illustrated through case-based exercises.","time_estimate_m":60,"type":"lecture","rationale":"Bridges data gathering and practical application, giving engineers a structured way to turn raw research into useful design insights, meeting the client’s need for better integration of user feedback.","tools_and_technologies":[],"learning_objectives":["Group qualitative and quantitative data into meaningful categories","Identify patterns and trends in user research findings","Extract and articulate actionable design insights"]},{"title":"Continuous User Feedback Lab","overview":"In this lab, participants simulate integrating iterative user feedback into a developing product. Learners set up simple feedback cycles, apply learnings to make incremental improvements, and review the benefits and pitfalls of ongoing engagement with users throughout the product development process.","time_estimate_m":60,"type":"lab","rationale":"Reinforces the need for continual improvement and user-centric development, helping developers build habits around user research and feedback beyond one-off usability tests.","tools_and_technologies":[],"learning_objectives":["Set up a user feedback cycle using predefined methods","Interpret feedback to identify areas for product improvement","Iterate on a concept based on real-user input"]},{"title":"Evaluative Research and Usability Testing","overview":"This session covers usability testing fundamentals and evaluative research methods. Learners plan, facilitate, and analyze findings from think-aloud usability studies, equipping them with practical tools to test digital solutions with real users.","time_estimate_m":75,"type":"lecture","rationale":"Clarifies how evaluative research drives product decisions, giving developers hands-on strategies to check and improve their design choices as part of their workflow.","tools_and_technologies":[],"learning_objectives":["Plan and structure a think-aloud usability test","Conduct a usability test session and observe participant behavior","Analyze test results to identify usability issues"]}]},{"competency":"Translate user research findings into actionable design requirements","time_estimate_m":180,"rationale":"This competency ensures that software engineers can move from research insights to tangible design criteria, a key aspect for connecting user needs with product features. It fulfills business outcomes by enabling more self-sufficient developers and aligns with the client's focus on incorporating UX approaches in decision-making.","modules":[{"title":"Turning Insights Into Requirements","overview":"Participants learn to transform raw research findings into clear, actionable design requirements. The module covers the crafting of user stories, mapping user journeys to pinpoint pain points, and outlining essential features that meet documented user needs.","time_estimate_m":60,"type":"lecture","rationale":"Provides developers with frameworks for bridging research and design, directly supporting the client’s need for actionable, user-centered requirements.","tools_and_technologies":[],"learning_objectives":["Translate qualitative insights into user stories","Map user journeys to identify critical features","Prioritize design requirements based on user pain points"]},{"title":"Defining Requirements With Stakeholders Lab","overview":"This collaborative lab mirrors real-world product meetings, where participants work with ‘stakeholders’ to clarify, document, and prioritize requirements arising from research. Learners engage in facilitated workshops to ensure user and business priorities are integrated into decisions.","time_estimate_m":60,"type":"lab","rationale":"Simulates collaborative decision-making, preparing engineers for cross-functional work that ties research to development priorities.","tools_and_technologies":[],"learning_objectives":["Facilitate a stakeholder workshop to define priorities","Document requirements in a collaborative setting","Align on feature scope considering both user and business needs"]},{"title":"Documenting Requirements in Miro","overview":"Learners use Miro to visually capture, organize, and share design requirements derived from user research. The session covers Miro features for tracking, tagging, and collaborating on requirements in team settings.","time_estimate_m":60,"type":"lab","rationale":"Fulfills client priorities around Miro proficiency, ensuring engineers can communicate and collaborate visually and asynchronously.","tools_and_technologies":["Miro"],"learning_objectives":["Set up a Miro board for requirements tracking","Use Miro’s tagging and grouping features to organize requirements","Share and review documented requirements with team members"]}]},{"competency":"Design high-fidelity interfaces with attention to visual hierarchy and usability","time_estimate_m":330,"rationale":"Engineers must be able to create sophisticated, polished designs that communicate ideas clearly to peers and UX professionals. High-fidelity prototyping directly leads to business goals around demonstrating design capability and enabling better collaboration using shared artifacts.","modules":[{"title":"Principles of Visual Hierarchy","overview":"Participants discover how to use color, typography, spacing, and layout to control focus and communicate clearly through UI. The session explores foundational concepts and provides practical analysis of effective interface examples, enabling learners to make informed design decisions.","time_estimate_m":60,"type":"lecture","rationale":"Equips engineers with foundational visual design knowledge that underpins high-fidelity interface creation and ensures shared design language with UX partners.","tools_and_technologies":[],"learning_objectives":["Identify core principles of visual hierarchy","Apply color, typography, and spacing to create focus","Assess an interface for hierarchical clarity"]},{"title":"Building High-Fidelity Prototypes Lab","overview":"Learners build pixel-accurate, interactive UI prototypes using UI kits and Visual Studio Code. Activities cover the selection of patterns, component assembly, and the application of real-world specifications for consistency and professionalism.","time_estimate_m":90,"type":"lab","rationale":"Gives software engineers structured, hands-on practice in high-fidelity design work—the centerpiece for demonstrating design competence to the business.","tools_and_technologies":["Visual Studio Code"],"learning_objectives":["Construct a pixel-perfect interface using a UI kit","Implement interactive elements with accurate alignment","Validate design accuracy against provided specifications"]},{"title":"Usability Heuristics for High-Fidelity UIs","overview":"Participants study and apply recognized usability heuristics to diagnose and refine existing UI designs. Live evaluation and feedback activities help establish a critical eye for solving design problems efficiently.","time_estimate_m":60,"type":"lecture","rationale":"Strengthens engineers’ ability to self-critique and improve high-fidelity prototypes, bridging design and usability for business-ready solutions.","tools_and_technologies":[],"learning_objectives":["Summarize key usability heuristics","Apply heuristics to identify design problems","Recommend improvements based on heuristic findings"]},{"title":"High-Fidelity Interface Collaboration Lab","overview":"This lab provides a safe environment for collaborative feedback and team critique on UI artifacts. Using Miro, participants share prototypes, exchange detailed feedback, and iterate designs in response to peer review.","time_estimate_m":60,"type":"lab","rationale":"Supports business priorities around collaboration, preparing engineers to communicate clearly with designers and iterate on designs.","tools_and_technologies":["Miro"],"learning_objectives":["Use Miro to share high-fidelity prototypes","Provide specific, actionable feedback on UI designs","Incorporate peer feedback into design iterations"]},{"title":"Polishing and Presenting UI Designs","overview":"In this culminating lab, participants finalize their prototypes, prepare concise walkthroughs, and present their work to the class—emphasizing both design rationale and business value. Presentations incorporate both Visual Studio Code and Miro artifacts.","time_estimate_m":60,"type":"lab","rationale":"Builds self-reliance and demonstration skills, connecting design outcomes to business needs and communicating effectively to stakeholders.","tools_and_technologies":["Visual Studio Code","Miro"],"learning_objectives":["Refine a high-fidelity prototype for presentation","Structure a concise design rationale narrative","Deliver a design walkthrough highlighting key decisions"]}]},{"competency":"Structure information architecture to optimize navigation and user flows","time_estimate_m":180,"rationale":"A strong sense of information architecture is crucial for engineers to design intuitive user experiences and logical navigation, supporting cross-discipline collaboration and ensuring seamless developer-designer handoffs.","modules":[{"title":"Foundations of Information Architecture","overview":"This session introduces essential IA concepts: taxonomy, hierarchy, labeling, and navigation patterns. Through comparison of both effective and ineffective real-world examples, learners gain the ability to outline navigation structures for web-based products.","time_estimate_m":60,"type":"lecture","rationale":"Provides the theoretical foundation for structuring digital products, empowering engineers to make accessible, clear navigation choices.","tools_and_technologies":[],"learning_objectives":["Define key information architecture concepts","Compare effective and ineffective IA patterns","Outline a navigation structure for a sample product"]},{"title":"Card Sorting and Navigation Mapping Lab","overview":"This practical lab requires learners to conduct a card sort exercise in Miro, interpret the results, and create navigation maps for a hypothetical product. The focus is on hands-on skills needed to validate and refine architectural decisions as a team.","time_estimate_m":60,"type":"lab","rationale":"Equips software engineers with practical methods for structuring and validating navigation using team-driven activities.","tools_and_technologies":["Miro"],"learning_objectives":["Conduct a card sorting exercise in Miro","Create navigation maps from card sort output","Iterate on navigation based on testing insights"]},{"title":"Testing User Flows","overview":"Participants learn how to evaluate and improve navigation structures via user flow testing and the application of metrics such as completion rates and error tracking. The session leverages real or simulated flows to highlight optimization strategies.","time_estimate_m":60,"type":"lecture","rationale":"Links architecture with user needs and product requirements, ensuring developers can assess and iterate on navigation choices.","tools_and_technologies":[],"learning_objectives":["Identify key metrics for user flow success","Design a test scenario to validate navigation","Analyze test results to spot and fix flow bottlenecks"]}]},{"competency":"Wireframe digital products to visually communicate interaction concepts","time_estimate_m":180,"rationale":"By regularly wireframing, engineers can quickly iterate on ideas, communicate solutions, and collaborate more effectively. This addresses client priorities regarding tooling like Miro and equips developers with hands-on skills to visualize and share concepts in team settings.","modules":[{"title":"Wireframing Basics","overview":"This introductory session explains the concept, purpose, and application of wireframes in digital product design. Learners distinguish between low- and high-fidelity wireframes, participate in rapid sketch exercises, and explore how wireframes contribute to effective teamwork.","time_estimate_m":60,"type":"lecture","rationale":"Builds a foundation for rapid concept exploration, vital for collaborative UX workflows.","tools_and_technologies":[],"learning_objectives":["Explain the purpose and benefits of wireframes","Distinguish between low- and high-fidelity wireframes","Sketch basic wireframe layouts"]},{"title":"Creating Wireframes With Miro Lab","overview":"This lab has participants use Miro’s digital whiteboard to quickly sketch and arrange UI components for assigned user flows. The exercise emphasizes collaborative rapid prototyping and collecting peer feedback in real time.","time_estimate_m":75,"type":"lab","rationale":"Aligns directly with client priorities around Miro proficiency and digital whiteboarding for cross-team work.","tools_and_technologies":["Miro"],"learning_objectives":["Set up a Miro board for wireframing","Use shapes and connectors to illustrate user flows","Collaborate on wireframes and gather peer input"]},{"title":"Communicating Concepts Through Wireframes","overview":"Focusing on communication, this module teaches learners to present, explain, and facilitate feedback on their wireframes, so team members and stakeholders can quickly align on key interaction concepts and iterate efficiently.","time_estimate_m":45,"type":"lecture","rationale":"Strengthens communication skills that make wireframes actionable, fitting the outcome of improved team collaboration.","tools_and_technologies":[],"learning_objectives":["Articulate design intent behind a wireframe","Facilitate constructive wireframe critiques","Incorporate feedback into updated wireframes"]}]},{"competency":"Utilize design systems to ensure consistency and scalability in UI components","time_estimate_m":180,"rationale":"Knowledge of design systems such as Primer is essential for developers to build cohesive and maintainable products. This competency supports business goals of efficiency and consistency and aligns with the client's interest in design system exposure and practice.","modules":[{"title":"Introduction to Design Systems","overview":"This introductory lecture defines design systems, explores their structure (components, patterns, guidelines), and shows why they are business-critical for scale and consistency. Primer Design System is presented as an anchor example, with reference to documentation and real-world adoption scenarios.","time_estimate_m":60,"type":"lecture","rationale":"Prepares engineers with a shared language for design systems, reinforcing business priorities around standardization and efficiency.","tools_and_technologies":["Primer Design System"],"learning_objectives":["Describe core components of a design system","Explain how design systems improve scalability","Navigate and interpret Primer Design System documentation"]},{"title":"Building With Primer Design System Lab","overview":"Participants work hands-on with Primer and Visual Studio Code to implement interface sections from scratch. They reference documentation, troubleshoot integration, and customize components for a cohesive interface.","time_estimate_m":60,"type":"lab","rationale":"Direct practice addressing the client priority for tool exposure and making engineers comfortable with design system adoption.","tools_and_technologies":["Primer Design System","Visual Studio Code"],"learning_objectives":["Implement UI components using Primer","Use Primer documentation to customize styles","Build a simple interface section in Visual Studio Code"]},{"title":"Maintaining and Extending Design Systems","overview":"In this session, learners explore strategies for updating and extending design systems over time, covering versioning, branching, and workflow best practices. Examples from Primer illustrate scaling and customization methods.","time_estimate_m":60,"type":"lecture","rationale":"Delivers practical insights into sustainable design system adoption, supporting velocity and cohesive product design.","tools_and_technologies":["Primer Design System"],"learning_objectives":["Explain best practices for versioning a design system","Demonstrate how to extend a Primer component","Plan a scalable workflow for system maintenance"]}]},{"competency":"Evaluate product designs against business requirements and technical constraints","time_estimate_m":210,"rationale":"Developers must assess design choices in the context of business goals, technical boundaries, and stakeholder needs to ensure solutions are realistic and aligned with organizational strategy. This supports the business outcome of cross-functional decision-making.","modules":[{"title":"Evaluating Designs for Business Alignment","overview":"Here, learners are taught to read and interpret business requirements, identify target KPIs, and relate these to design and technical decisions. A case study links UI features with concrete business outcomes and ROI.","time_estimate_m":60,"type":"lecture","rationale":"Prepares engineers to evaluate the why behind design decisions, promoting business-informed development and cross-team understanding.","tools_and_technologies":[],"learning_objectives":["Identify key business requirements relevant to UI/UX","Map design decisions to business KPIs","Assess whether a design meets target business outcomes"]},{"title":"Technical Constraints in Design Lab","overview":"In this lab, participants review proposed designs in Visual Studio Code, spot technical constraints, and work as a team to propose creative but practical solutions. Trade-off documentation is produced for simulated stakeholder review.","time_estimate_m":75,"type":"lab","rationale":"Marries technical and design skills by requiring developers to think about feasibility as part of healthy product delivery.","tools_and_technologies":["Visual Studio Code"],"learning_objectives":["Analyze a design for technical feasibility","Identify and document implementation trade-offs","Propose technical solutions that balance design intent and constraints"]},{"title":"Stakeholder Review and Feedback","overview":"This module breaks down the stakeholder review process, focusing on preparation, artifact sharing, structured feedback, and collaborative decision-making. Participants practice running and capturing input from stakeholder sessions, with the goal of actionable project alignment.","time_estimate_m":75,"type":"lecture","rationale":"Prepares engineers to communicate persuasively, synthesize perspectives, and make balanced decisions, boosting product alignment and velocity.","tools_and_technologies":[],"learning_objectives":["Outline a structured stakeholder review process","Use visual artifacts to communicate design status","Capture and prioritize stakeholder feedback"]}]},{"competency":"Implement interactive prototypes to test and validate user interactions","time_estimate_m":180,"rationale":"By building and testing prototypes, engineers gain practical skills for rapid validation of user flows and interaction patterns. This supports business outcomes focused on speeding up the design-development process and making developers more self-reliant.","modules":[{"title":"Basics of Interactive Prototyping","overview":"This lecture defines essential concepts of interactive prototyping, compares levels of fidelity, and illustrates value through examples. Learners are introduced to common use cases and validation metrics to measure success.","time_estimate_m":45,"type":"lecture","rationale":"Sets foundational knowledge for why prototyping is essential, particularly for validation early and often in the design process.","tools_and_technologies":[],"learning_objectives":["Define key interactive prototyping concepts","Compare prototyping fidelity levels","Identify scenarios where prototyping adds value"]},{"title":"Prototyping With Visual Studio Code Lab","overview":"In this lab, engineers set up a coding environment in Visual Studio Code, implement user interactions (states, transitions), and simulate realistic workflows using a modern front-end library. Testing for accuracy and interaction is emphasized.","time_estimate_m":90,"type":"lab","rationale":"Aligns to learner strengths, speeding up skill-building for engineers already comfortable in code and driving hands-on validation practices.","tools_and_technologies":["Visual Studio Code"],"learning_objectives":["Set up a code-based prototype environment","Implement interactive UI transitions","Test prototype behavior in the browser"]},{"title":"Validating User Flows","overview":"Participants learn techniques for validating prototype usability, compare in-person and remote feedback methods, and develop quick plans for collecting and assessing user feedback to guide ongoing iterations.","time_estimate_m":45,"type":"lecture","rationale":"Closes the loop on the competency, ensuring that prototyping is not just done—but is tested, iterated, and learned from.","tools_and_technologies":[],"learning_objectives":["Compare in-person and remote validation methods","Define lean validation cycles","Interpret validation results to guide iterations"]}]}]}